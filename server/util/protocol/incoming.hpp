// AUTOGENERATED BY setup.py! DO NOT EDIT MANUALLY!
// By Tyler Clarke.
// This software is protected by GPLv3. That means you have to provide the source for anything that uses my code, and you have to give me credit.
// You can make money off this if you want, but that would be dumb.

// This is the declaration file for the incoming protocol.

#pragma once
#include <util/protocol/protocol.hpp>
namespace protocol::incoming {
struct Init : ProtocolFrameBase {
static uint8_t opcode;
Init(const char* data);
Init();
void load(char* buffer);
size_t getSize();
};
struct RoomCreate : ProtocolFrameBase {
static uint8_t opcode;
std::string roomName;
std::string mapName;
uint32_t creator;
RoomCreate(const char* data);
RoomCreate();
void load(char* buffer);
size_t getSize();
};
struct RoomJoin : ProtocolFrameBase {
static uint8_t opcode;
std::string playerName;
uint32_t playerID;
uint32_t roomid;
RoomJoin(const char* data);
RoomJoin();
void load(char* buffer);
size_t getSize();
};
struct RoomConnect : ProtocolFrameBase {
static uint8_t opcode;
uint32_t playerID;
RoomConnect(const char* data);
RoomConnect();
void load(char* buffer);
size_t getSize();
};
struct InputUpdate : ProtocolFrameBase {
static uint8_t opcode;
bool up;
bool down;
bool left;
bool right;
InputUpdate(const char* data);
InputUpdate();
void load(char* buffer);
size_t getSize();
};
}
