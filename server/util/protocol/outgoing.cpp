// AUTOGENERATED BY setup.py! DO NOT EDIT MANUALLY!
// By Tyler Clarke.
// This software is protected by GPLv3. That means you have to provide the source for anything that uses my code, and you have to give me credit.
// You can make money off this if you want, but that would be dumb.

// This is the definition file for the outgoing protocol.

#include <util/protocol/outgoing.hpp>
void protocol::outgoing::TestFrame::load(char* buffer) {
buffer[0] = 0;
buffer ++; // clever C hack: rather than worrying about current index, we can just consume a byte of the buffer.
// This is very fast and makes life a lot easier.
buffer[0] = uint64_t_TCHAR;
buffer++;for (uint8_t i = 0; i < sizeof(uint64_t); i ++){buffer[i] = ((char*)&number)[i];}
buffer += sizeof(uint64_t); // see above
buffer[0] = uint64_t_TCHAR;
buffer++;for (uint8_t i = 0; i < sizeof(uint64_t); i ++){buffer[i] = ((char*)&numbertwo)[i];}
buffer += sizeof(uint64_t); // see above
buffer[0] = int64_t_TCHAR;
buffer++;for (uint8_t i = 0; i < sizeof(int64_t); i ++){buffer[i] = ((char*)&signedint)[i];}
buffer += sizeof(int64_t); // see above
}

size_t protocol::outgoing::TestFrame::getSize() {
return 4 + sizeof(uint64_t) + sizeof(uint64_t) + sizeof(int64_t);
}
